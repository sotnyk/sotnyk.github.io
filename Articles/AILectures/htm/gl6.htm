<html>

<head>
	<title>Глава 6. Машинная эволюция</title>
	<link rel=stylesheet href="../css/lectures.css" type="text/css">
	<meta charset="utf-8"/>
</head>

<body>

<h3><a NAME="Лекции_14_16_Машинная_эволюция">Глава 6. Машинная эволюция</a></h3>

<p>&nbsp;
<center>
<small>
<b>
Метод перебора, как наиболее универсальный метод поиска решений. Методы ускорения перебора. Метод группового 
учета аргументов как представитель эволюционных методов. Генетический алгоритм.<br><br>

Автоматический синтез технических решений. Поиск оптимальных структур. Алгоритм поиска глобального 
экстремума. Алгоритм конкурирующих точек. Алгоритм случайного поиска в подпространствах. Некоторые замечания
относительно использования ГА. Автоматизированный синтез физических принципов действия. Фонд 
физико-технических эффектов. Синтез физических принципов действия по заданной физической операции. 
Заключительные замечания (слабосвязанный мир).
</b>
</small>
</center>
</p>

<p>&nbsp;
<br><br>
<a NAME="Лекции_17_18_Современный_взгляд_на_мышл">
<i><b>
<center>Метод перебора, как наиболее универсальный метод поиска решений. Методы ускорения перебора.
</center></b></i>
</a>
</p>

<p>Как Вы уже знаете, существуют задачи, для которых доказано отсутствие общего алгоритма решения (например, 
задача о разрешимости Диофантова множества). В то же время, можно сказать, что, если бы мы обладали
бесконечным запасом времени и соответствующими ресурсами, то мы могли бы найти решение любой задачи. Здесь 
имеется в виду не конструирование нового знания на основании имеющегося (вывод новых теорем из аксиом и уже 
выведенных теорем), а, прежде всего, &quot;тупой&quot; перебор вариантов.</p>

<p>Еще в XVII столетии великий Лейбниц пытался раскрыть тайну "Всеобщего Искусства Изобретения". Он 
утверждал, что одной из двух частей этого искусства является комбинаторика - перебор постепенно усложняющихся 
комбинаций исходных данных. Второй частью является эвристика - свойство догадки человека. И сейчас вторая часть 
Искусства Изобретения все еще остается нераскрытой. На языке нашего времени эта часть - модель мышления 
человека, включающая в себя процессы генерации эвристик (догадок, изобретений, открытий).</p>

<p>Однако прежде чем перейти к рассмотрению улучшенных переборных алгоритмов (улучшенных потому, что для 
простого перебора у нас в запасе нет вечности), я бы отметил еще один универсальный метод ускорения перебора -
быстрое отсечение ложных (или вероятно ложных, что и используется большинством алгоритмов) ветвей перебора.</p>

<p>&nbsp;
<br><br>
<i><b>
<center>Эволюция
</center></b></i>
</p>

<p>Прежде всего, упомяну, что отнюдь не все ученые признают наличие эволюции. Многие религиозные течения 
(например, свидетели Иеговы) считают учение об эволюции живой природы ошибочным. Я не хочу сейчас вдаваться в 
полемику относительно доказательств за и против по одной простой причине. Даже, если я не прав в своих взглядах, 
объясняя эволюционные алгоритмы как аналоги процессов, происходящих в живой природе, никто не сможет сказать, 
что эти алгоритмы неверны. Несмотря ни на что, они находят огромное применение в современной науке и технике, и
показывают подчас просто поразительные результаты.</p>

<p>Основные принципы эволюционной теории заложил Чарльз Дарвин в своей самой революционной работе - 
&quot;Происхождение видов&quot;. Самым важным его выводом был вывод об основной направляющей силе эволюции - 
ею признавался естественный отбор. Другими словами - выживает сильнейший (в широком смысле этого слова). 
Забегая вперед, замечу, что любой эволюционный алгоритм имеет такой шаг, как выделение самых сильных 
(полезных) особей. Вторым, не менее важным выводом Дарвина был вывод об изменчивости организмов. Аналогом 
данного закона у всех алгоритмов является шаг генерации новых экземпляров искомых объектов (решений, структур, 
особей, алгоритмов). </p>

<p>Именно отбор наилучших объектов является ключевой эвристикой всех эволюционных методов, позволяющих 
зачастую уменьшить время поиска решения на несколько порядков по сравнению со случайным поиском. Если 
попытаться выразить эту эвристику на естественном языке, то получим: сложно получить самое лучшее решение,
модифицируя плохое. Скорее всего, оно получится из нескольких лучших на данный момент.</p>

<p>Из основных особенностей эволюционных алгоритмов можно отметить их некоторую сложность в плане настройки 
основных параметров (вырождение, либо неустойчивость решения). Поэтому, экспериментируя с ними, и получив не
очень хорошие результаты, попробуйте не объявлять сразу алгоритм неподходящим, а попытаться опробовать его 
при других настройках. Данный недостаток следует из основной эвристики - можно &quot;уничтожить&quot; предка 
самого лучшего решения, если сделать селекцию слишком &quot;жесткой&quot; (не зря ведь биологам давно известно, 
что если осталось меньше десятка особей исчезающего вида, то этот вид сам по себе исчезнет из-за вырождения).</p>

<p>&nbsp;
<br><br>
<i><b>
<center>МГУА
</center></b></i>
</p>

<p>Описанный в разделе алгоритмов распознавания образов метод группового учета аргументов так же относится к 
разряду эволюционных. Его можно представить как следующий цикл:</p>

<ol>
  <li>Берем самый последний слой классификаторов.</li>
  <li>Генерируем из них по определенным правилам новый слой классификаторов (которые теперь сами становятся последним слоем).</li>
  <li>Отбираем из них F лучших, где F - ширина отбора (селекции).</li>
  <li>Если не выполняется условие прекращения селекции (наступление вырождения – инцухта), переходим на п. 1.</li>
  <li>Самый лучший классификатор объявляется искомым решением задачи идентификации.</li>
</ol>

<p>Как мы видим, налицо все признаки эволюционного алгоритма - отбор (селекция) и генерация нового поколения.</p>

<p>&nbsp;
<br><br>
<i><b>
<center>Генетический алгоритм (ГА)
</center></b></i>
</p>

<p>Генетический алгоритм является самым известным на данный момент представителем эволюционных алгоритмов, 
и по своей сути является алгоритмом для нахождения глобального экстремума многоэкстремальной функции. ГА
представляет собой модель размножения живых организмов.</p>

<p>Для начала представим себе целевую функцию от многих переменных, у которой необходимо найти глобальных 
максимум или минимум:</p>

<p>f(x1, x2, x3, …, xN)</p>

<p>Для того чтобы заработал ГА, нам необходимо представить независимые переменные в виде хромосом. Как это 
делается?</p>

<p>Как создать хромосомы?</p>

<p>Первым Вашим шагом будет преобразование независимых переменных в хромосомы, которые будут содержать 
всю необходимую информацию о каждой создаваемой особи. Имеется два варианта кодирования параметров:</p>

<ul>
  <li>в двоичном формате;</li>
  <li>в формате с плавающей запятой.</li>
</ul>

<p>В случае если мы используем двоичное кодирование, мы используем N бит для каждого параметра, причем N 
может быть различным для каждого параметра. Если параметр может изменяться между минимальным значением 
MIN и максимальным MAX, используем следующие формулы для преобразования:</p>

<p>r = g*(MAX – MIN) / (2^N – 1) + MIN.</p>

<p>g = (r – MIN) / (MAX – MIN) * (2^N – 1)</p>

<p>где g – целочисленные двоичные гены,</p>

<p>r – эквивалент генов в формате с плавающей запятой.</p>

<p>Хромосомы в формате с плавающей запятой, создаются при помощи размещения закодированных параметров 
один за другим.</p>

<p>Если сравнивать эти два способа представления, то более хорошие результаты дает вариант представления в 
двоичном формате (особенно, при использовании кодов Грея). Правда, в этом случае мы вынуждены мириться с 
постоянным кодированием/декодированием параметров.</p>

<p>Как работает генетический алгоритм?</p>

<p>В общем, генетический алгоритм работает следующим образом. В первом поколении все хромосомы 
генерируются случайно. Определяется их &quot;полезность&quot;. Начиная с этой точки, ГА может начинать 
генерировать новую популяцию. Обычно, размер популяции постоянен.</p>

<p>Репродукция состоит из четырех шагов:</p>

<ul>
  <li>селекции</li>
</ul>

<p>и трех генетических операторов
(порядок применения не важен)</p>

<ul>
  <li>кроссовер</li>
  <li>мутация</li>
  <li>инверсия</li>
</ul>

<p>Роль и значение селекции мы уже рассмотрели в обзоре эволюционных алгоритмов.</p>

<p>Кроссовер является наиболее важным генетическим оператором. Он генерирует новую хромосому, объединяя 
генетический материал двух родительских. Существует несколько вариантов кроссовера. Наиболее простым является
одноточечный. В этом варианте просто берутся две хромосомы, и перерезаются в случайно выбранной точке. 
Результирующая хромосома получается из начала одной и конца другой родительских хромосом.</p>

<table border="1">
  <tr>
    <td WIDTH="33%" VALIGN="TOP">
    <font FACE="Courier New" SIZE="2" COLOR="#ff0000"><p>001100101110010|11000</font></td>
    <td WIDTH="33%" VALIGN="MIDDLE" ROWSPAN="2">
    <font FACE="Courier New" SIZE="2"><p ALIGN="CENTER">--------&gt;</font></td>
    <td WIDTH="33%" VALIGN="MIDDLE" ROWSPAN="2">
    <font FACE="Courier New" SIZE="2" COLOR="#ff0000"><p>001100101110010</font>
    <font FACE="Courier New" SIZE="2"><i><b>11100</b></i></font></td>
  </tr>
  <tr>
    <td WIDTH="33%" VALIGN="TOP">
    <font FACE="Courier New" SIZE="2"><i><b><p>110101101101000|11100</b></i></font></td>
  </tr>
</table>

<p>Мутация представляет собой случайное изменение хромосомы (обычно простым изменением состояния одного из 
битов на противоположное). Данный оператор позволяет более быстро находить ГА локальные экстремумы с одной 
стороны, и позволяет &quot;перескочить&quot; на другой локальный экстремум с другой.</p>

<table BORDER="1" CELLSPACING="1" CELLPADDING="9">
  <tr>
    <td WIDTH="33%" VALIGN="TOP"><font FACE="Courier New" SIZE="2"><p>00110010111001</font><font
    FACE="Courier New" SIZE="2" COLOR="#ff0000">0</font><font FACE="Courier New" SIZE="2">11000</font></td>
    <td WIDTH="33%" VALIGN="TOP"><font FACE="Courier New" SIZE="2"><p ALIGN="CENTER">--------&gt;</font></td>
    <td WIDTH="33%" VALIGN="TOP"><font FACE="Courier New" SIZE="2"><p>00110010111001</font><font
    FACE="Courier New" SIZE="2" COLOR="#ff0000">1</font><font FACE="Courier New" SIZE="2">11000</font></td>
  </tr>
</table>

<p>Инверсия инвертирует (изменяет) порядок бит в хромосоме путем циклической перестановки (случайное 
количество раз). Многие модификации ГА обходятся без данного генетического оператора.</p>

<table BORDER="1" CELLSPACING="1" CELLPADDING="9">
  <tr>
    <td WIDTH="33%" VALIGN="TOP"><font FACE="Courier New" SIZE="2"><p>001100101110010</font><font
    FACE="Courier New" SIZE="2" COLOR="#ff0000">11000</font></td>
    <td WIDTH="33%" VALIGN="TOP"><font FACE="Courier New" SIZE="2"><p ALIGN="CENTER">--------&gt;</font></td>
    <td WIDTH="33%" VALIGN="TOP"><font FACE="Courier New" SIZE="2" COLOR="#ff0000"><p
   >11000</font><font FACE="Courier New" SIZE="2">001100101110010</font></td>
  </tr>
</table>

<p>Очень важно понять, за счет чего ГА на несколько порядков превосходит по быстроте случайный поиск во многих 
задачах? Дело здесь видимо в том, что большинство систем имеют довольно независимые подсистемы. Вследствие
этого, при обмене генетическим материалом часто может встретиться ситуация, когда от каждого из родителей 
берутся гены, соответствующие наиболее удачному варианту определенной подсистемы (остальные 
&quot;уродцы&quot; постепенно вымирают). Другими словами, ГА позволяет накапливать удачные решения для систем,
состоящих из относительно независимых подсистем (большинство современных сложных технических систем, и все 
известные живые организмы). Соответственно можно предсказать и когда ГА скорее всего даст сбой (или, по 
крайней мере, не покажет особых преимуществ перед методом Монте-Карло) - системы, которые сложно разбить на
подсистемы (узлы, модули), а так же в случае неудачного порядка расположения генов (рядом расположены 
параметры, относящиеся к различным подсистемам), при котором преимущества обмена генетическим материалом 
сводятся к нулю. Последнее замечание несколько ослабляется в системах с диплоидным (двойным) генетическим
набором.</p>

<p>Эволюционное (генетическое) программирование</p>

<p>Данные, которые закодированы в генотипе, могут представлять собой команды какой-либо виртуальной машины. 
В таком случае мы говорим об эволюционном или генетическом программировании. В простейшем случае, мы можем
ничего не менять в генетическом алгоритме. Однако в таком случае, длина получаемой последовательности действий 
(программы) получается не отличающейся от той (или тех), которую мы поместили как затравку. Современные
алгоритмы генетического программирования распространяют ГА для систем с переменной длиной генотипа.</p>


<p>&nbsp;
<br><br>
<i><b>
<center>Автоматический синтез технических решений
</center></b></i>
</p>

<p>Каждый настоящий изобретатель, каждый творчески работающий конструктор ищут не просто новое, улучшенное 
ТР, а стремятся найти самое эффективное, самое рациональное, лучшее из лучших решений. И такие решения 
некоторым изобретателям удавалось находить. Это, например, конструкция книги, карандаша, гвоздя, брюк, 
велосипеда, трансформатора переменного тока, паровой машины и многих других ТО. Такие конструкции в первую 
очередь характеризуются тем, что они сотни или десятки лет массово производятся и используются без изменения, 
если не считать мелких усовершенствований.</p>

<p>Наивысшие достижения инженерного творчества заключаются в нахождении глобально оптимальных принципов 
действия и структур ТО.</p>

<p>&nbsp;
<br><br>
<i><b>
<center>Поиск оптимальных структур
</center></b></i>
</p>

<p>Постановка задачи параметрической оптимизации. Прежде чем рассматривать постановку задачи поиска 
оптимального ТР для заданного физического принципа действия, разберем задачу более низкого уровня, которую
называют задачей поиска оптимальных значений параметров для заданного ТР или сокращенно - задачей 
параметрической оптимизации. Эти задачи неизбежно приходится решать при поиске оптимального ТР, а кроме того, 
они имеют и самостоятельное значение.</p>

<p>Любое отдельное ТР, как правило, можно описать единым набором переменных (изменяемых параметров)</p>

<p>Х = (x<sub>1</sub>, ..., x<sub>n</sub>),&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (1)</p>

<p>которые могут изменять свои значения в некотором гиперпараллелепипеде</p>

<p>a<sub>i</sub>&lt;=x<sub>i </sub>&lt;=b<sub>i</sub>, i = l, ..., n,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (2)</p>

<p>где для расширения области поиска не рекомендуется накладывать жестких ограничений на a<sub>i</sub>, 
b<sub>i</sub>.</p>

<p>Математическая модель проектируемого изделия ставит в соответствие каждому набору значений (1) некоторый 
критерий качества (функцию цели) f(х) и накладывает на переменные (1) дополнительные ограничения, 
представляемые чаще всего в виде системы нелинейных неравенств</p>

<p>g<sub>i</sub> (X) <font FACE="Symbol">&gt;=</font> 0, j = 1,...,m,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (3)</p>

<p>Тогда задача поиска оптимальных параметров ТР состоит в нахождении такого набора (1), который удовлетворяет 
неравенствам (2) и (3) и обеспечивает глобальный экстремум критерию качества. Для определенности будем считать, 
что отыскивается минимум, и, если обозначим через D область допустимых решений, удовлетворяющих неравенствам
(2), (3), получим задачу математического программирования в n-мерном пространстве:</p>

<p ALIGN="LEFT">найти точку X*<img SRC="../img/image135.gif" width="15" height="17">D, такую, что</p>

<p><img SRC="../img/image92.gif" WIDTH="182" HEIGHT="42">.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (4)</p>

<p>Часто в задачах параметрической оптимизации на переменные или часть из них наложены условия 
целочисленности или дискретности. В этом случае область поиска D становится заведомо многосвязной, а сама 
задача с математической точки зрения - многоэкстремальной.</p>

<p>Следует еще заметить, что задачи поиска оптимальных значений параметров в подавляющем большинстве случаев 
представляют собой многопараметрические многоэкстремальные задачи, в которых функциональные ограничения (3)
"вырезают" замысловатые допустимые области. Объемы этих областей могут быть очень малыми по сравнению с 
объемами гиперпараллелепипедов (2). Однако, несмотря на такую сложность, большинство задач параметрической 
оптимизации можно вполне удовлетворительно решить существующими методами.</p>

<p>Постановка задачи структурной оптимизации. Среди задач поиска оптимальных ТР рассмотрим только подкласс, 
называемый задачами поиска оптимальных многоэлементных структур ТО или коротко - задач структурной 
оптимизации.</p>

<p>Строгое определение понятия структуры ТО дать затруднительно, поэтому укажем лишь некоторые инженерные и 
математические свойства, которые связаны с этим понятием.</p>

<p>С инженерной точки зрения разные структуры рассматриваемого класса ТО отличаются числом элементов, 
самими элементами, их компоновкой, характером соединения между элементами и т. д. Понятие структуры в большей
мере аналогично понятию технического решения, данному в п. 3 гл. 1, однако имеются различия, которые вызывают 
необходимость введения этого дополнительного понятия. Во-первых, в рамках заданного физического принципа 
действия, как правило, существует более широкое множество ТР по сравнению с множеством, которое можно
формально описать при постановке и решений задачи структурной оптимизации. Во-вторых, между отдельными ТР 
подразумеваются более существенные различия по конструктивным признакам, чем различия между отдельными
структурами, иногда формально отличающимися значениями несущественных дискретных переменных. Например, на 
рис. 64 показаны две фермы моста с решеткой в виде равнобедренных треугольников, которые имеют одинаковые ТР, 
но разные структуры. Короче говоря, для заданного физического принципа Действия множества возможных ТР и 
множество возможных структур (для рассматриваемой задачи структурной оптимизации) пересекаются, но, как 
правило, не совпадают.</p>

<p>При этом одно ТР можно представить несколькими близкими структурами. </p>

<p>С математической точки зрения два варианта ТО будут иметь различную структуру, если соответствующие им 
задачи параметрической оптимизации по одному и тому же критерию качества и при условии выбора оптимальных
параметров каждого элемента структуры имеют различные наборы переменных (1) и функции (3), т. е. для различных 
структур существуют различные задачи параметрической оптимизации. Под критерием качества также 
подразумевается физико-технический, экономический или другой показатель (масса, точность, мощность, стоимость
и т. п.), по значению которого из любых двух структур можно выбрать лучшую.</p>

<p><img SRC="../img/image93.gif" WIDTH="378" HEIGHT="406" align="left">Постановку задач структурной оптимизации обычно 
начинают с определения набора переменных по следующей методике.</p>

<p>1. Задают такие переменные, чтобы они могли по возможности описать множество всех рациональных структур 
S<sub>0</sub>, которые в состоянии оценить существующая математическая модель в рассматриваемом классе ТО.</p>

<p>2. Просматривают и анализируют методы преобразования структур. Дополняют множество S<sub>0</sub>
подмножествами новых структур, которые можно синтезировать и оценить с помощью существующей или 
доработанной математической модели. В результате строится расширенное множество рассматриваемых структур 
S и описывающий его набор переменных, который обозначим вектором А. Пусть, например, задача структурной
оптимизации допускает следующий набор А:</p>

<p ALIGN="left">(k, L, i, j, <img SRC="../img/image94.gif" WIDTH="21" HEIGHT="30">
<a NAME="Лекции_17_18_Современный_взгляд_на_мышл">, ..., </a>
<img SRC="../img/image95.gif" WIDTH="25" HEIGHT="30">, <img SRC="../img/image96.gif" WIDTH="21" HEIGHT="25">,
..., <img SRC="../img/image97.gif" WIDTH="25" HEIGHT="25">, <img SRC="../img/image98.gif" WIDTH="28" HEIGHT="25">,
..., <img SRC="../img/image99.gif" WIDTH="31" HEIGHT="25">, <img SRC="../img/image100.gif" WIDTH="28" HEIGHT="28">),
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (5)</p>

<p>где k - число элементов в структуре; </p>

<p>L - число способов соединения элементов; </p>

<p><img SRC="../img/image101.gif" WIDTH="21" HEIGHT="30"> - вектор, описывающий геометрические, физические и 
другие свойства i-го элемента;</p>

<p>i - номер элемента (1, ..., k), </p>

<p><img SRC="../img/image102.gif" WIDTH="21" HEIGHT="28"> - вектор, описывающий геометрические, физические и 
другие свойства j-го способа соединения: </p>

<p>j - номер способа соединения (1,...,L);</p>

<p><img SRC="../img/image103.gif" WIDTH="25" HEIGHT="28"> - вектор, характеризующий положение i-го элемента
в пространстве при j-м способе соединения (i = 1, ..., k, j =l, ..., L); </p>

<p><img SRC="../img/image100.gif" WIDTH="28" HEIGHT="28">- другие переменные.</p>

<p>3. Из вектора А выделяют вектор А' независимых переменных, которыми можно варьировать при поиске 
оптимальных структур. Для зависимых переменных задают алгоритм их определения через независимые 
переменные.</p>

<p>4. Вектор А' разделяют на вектор переменных A'<sub>S</sub>, обеспечивающих изменение структуры, и вектор 
переменных А'<sub>P</sub>, с помощью которых ставят и решают задачи параметрической оптимизации для заданной
структуры. Вектор А'<sub>P</sub> состоит из набора общих переменных А'<sub>0</sub>, которые присутствуют при 
изменении любой структуры, и набора переменных А'<sub>C</sub>, изменяющихся при переходе от структуры к 
структуре. При решении задачи параметрической оптимизации для заданной структуры используется только
определенная часть переменных из набора Ас.</p>

<p>Так, если в задаче структурной оптимизации с указанным набором переменных структура определяется способом 
соединения, то можно считать, что A'<sub>S</sub> есть одна переменная</p>

<p ALIGN="left">j, А'<sub>C</sub> = {<img SRC="../img/image104.gif" WIDTH="26" HEIGHT="36">, ..., 
<img SRC="../img/image105.gif" WIDTH="30" HEIGHT="36">, <img SRC="../img/image106.gif" WIDTH="26" HEIGHT="33">),
А'<sub>C</sub> = {А'<sub>C1</sub>, …, A'<sub>CL</sub>),</p>

<p ALIGN="left">где А'<sub>CJ</sub>, = {<img SRC="../img/image107.gif" WIDTH="25" HEIGHT="36">, 
<img SRC="../img/image108.gif" WIDTH="31" HEIGHT="36">, ..., 
<img SRC="../img/image109.gif" WIDTH="32" HEIGHT="33">} - собственные переменные j-й структуры; штрих означает,
что среди соответствующих переменных выбраны независимые.</p>

<p>Допустим, имеется алгоритм выбора из множества S подмножества всех допустимых структур 
{S<sub>i</sub>,..., S<sub>m</sub>}, у которых существует хотя бы один набор значений параметров, удовлетворяющих 
заданным ограничениям. Допустим также, что для любой структуры S<sub>J</sub> (j = 1, ..., m) можно решить задачу 
параметрической оптимизации, т. е. задать пространство переменных</p>

<p ALIGN="LEFT"><img SRC="../img/image110.gif" WIDTH="136" HEIGHT="33">, j = 1, …, m, (6)</p>

<p>и по единому критерию качества найти допустимые оптимальные параметры структуры S<sub>J</sub>. 
Оптимальные значения параметров структуры S<sub>J</sub> будем обозначать через X<sup>*</sup><sub>J</sub>.</p>

<p>Тогда задаче структурной оптимизации можно дать следующую формулировку.</p>

<p>Имеется m n<sub>J</sub>-мерных параллелепипедов</p>

<p><img SRC="../img/image111.gif" WIDTH="100" HEIGHT="30">, i = 1, …, n<sub>J</sub>, j = 1, …, m, (7)</p>

<p ALIGN="left">как с непрерывным, так и с дискретным характером изменения переменных 
<img SRC="../img/image112.gif" WIDTH="26" HEIGHT="33">. Для каждого из параллелепипедов задана по единому 
критерию качества целевая функция</p>

<p><img SRC="../img/image113.gif" WIDTH="85" HEIGHT="28">, j = 1, …, m, (8)</p>

<p>и система ограничений</p>

<p><img SRC="../img/image114.gif" WIDTH="90" HEIGHT="28">, r = 1, …, p<sub>J</sub>, j = 1, …, m, (9)</p>

<p ALIGN="left">Требуется найти точку <img SRC="../img/image115.gif" WIDTH="26" HEIGHT="30">, принадлежащую
j<sup>*</sup>-му параллелепипеду, для которой</p>

<p><img SRC="../img/image116.gif" WIDTH="213" HEIGHT="96"></p>

<p>Таким образом, задача структурной оптимизации состоит в нахождении глобально-оптимальной структуры и
глобально-оптимальных значений переменных внутри этой структуры, т. е. эту задачу можно назвать также задачей
структурно-параметрической оптимизации.</p>

<p>К задачам структурной оптимизации относится задача выбора оптимальной компоновки ТО.</p>

<p>Отметим некоторые особенности задач структурной оптимизации. Во-первых, почти всегда в этих задачах
одновременно присутствуют и дискретные, и непрерывные переменные, т. е. задачи структурной оптимизации в 
общем случае относятся к смешанным задачам математического программирования. Во-вторых, при структурных
преобразованиях изменяются число и характер переменных и соответственно функции ограничений и целевые
функции. Что касается характера многосвязной области поиска, то отдельные подобласти или имеют различную
размерность или (при совпадении размерности) образованы различными наборами переменных.</p>


<p>&nbsp;
<br><br>
<i><b>
<center>Алгоритм поиска глобального экстремума
</center></b></i>
</p>

<p>Алгоритм поиска глобально-оптимального решения можно использовать для решения задач как параметрической, 
так и структурной оптимизации. Укрупненная блок-схема алгоритма включает четыре процедуры: </p>

<p>1) синтез допустимой структуры (СДС), обеспечивающий выбор допустимого решения из любой подобласти всей 
области поиска;</p>

<p>2) шаг локального поиска (ШЛП), обеспечивающий переход от одного решения к другому допустимому решению, 
как правило, той же структуры, но с улучшенным значением критерия; под шагом локального поиска можно понимать 
некоторый условный шаг по какому-либо алгоритму поиска локального экстремума (например, одна итерация по 
методу наискорейшего спуска);</p>

<p>3) глобальный поиск, управляющий работой процедур СДС и ШЛП;</p>


<p><img SRC="../img/image117.gif" WIDTH="691" HEIGHT="222"></p>

<p>4) проверка условий прекращения поиска, определяющая конец решения задачи </p>

<p>Приведем основные рекомендации построения процедур СДС и ШЛП.</p>

<p>В некоторых случаях построение процедуры СДС можно свести к предварительному составлению набора 
допустимых структур, из которого выбирают структуры при каждом обращении к процедуре СДС. Если суть этой
процедуры состоит в выборе по возможности допустимого набора переменных структурной оптимизации, то 
представляется полезным включать в нее правила выбора переменных, основанные на эвристических соображениях,
аналитических и экспериментальных исследованиях, изучение опыта проектирования и эксплуатации аналогичных TО. 
Для некоторых сложных или малоизученных задач проектирования трудно построить процедуру СДС, обеспечивающую
получение допустимых структур. В этом случае, в процедуру целесообразно включать операции преобразования 
недопустимых структур в допустимые. Набор таких операций можно составить из подходящих эвристических приемов 
(для задач, связанных с техническими объектами сборники таких приемов можно найти в соответствующей 
литературе, в которой решение изобретательских задач рассматривается более подробно). Преобразование 
недопустимых структур в допустимые можно также решать как задачу оптимизации. В диалоговом режиме работы 
санкцию процедуры СДС может взять на себя проектировщик.</p>

<p>В целом по процедуре СДС можно дать следующие рекомендации, направленные на повышение вероятности 
выбора допустимых структур и снижение объема вычислений по оценке недопустимых:</p>

<p>способы выбора значений переменных должны содержать правила, отсекающие заведомо нерациональные и 
недопустимые значения переменных и их комбинации;</p>

<p>ограничения следует проверять не после построения структуры в целом, а по возможности в процессе построения, 
что позволяет сократить лишнюю работу по ненужным построениям и в ряде случаев сразу внести поправки по
устранению дефектов структуры;</p>

<p>проверяемые ограничения должны быть упорядочены по снижению вероятности их нарушения; такое упорядочение 
иногда можно проводить автоматически в процессы решения задачи.</p>

<p>Процедуры ШЛП включают обычно способы изменения переменных, ориентированные на решение задач как 
структурной, так и параметрической оптимизации. Приведенные рекомендации по построению процедур СДС можно
использовать и при построении способов локального изменения дискретных переменных. Для изменения 
непрерывных переменных, как правило, применяют различные алгоритмы локального поиска. Ниже указаны 
наиболее предпочтительные (о ГА смотри замечание ниже).</p>

<p>В качестве процедуры глобального поиска используется алгоритм конкурирующих точек. В основе этого 
алгоритма лежит принцип эволюции популяции живых организмов, находящихся в ограниченном пространстве,
например, на острове. В такой популяции резко обостряется конкуренция между отдельными особями. В связи с этим 
в основу алгоритма конкурирующих точек положены следующие положения:</p>

<p>поиск глобального экстремума осуществляется несколькими конкурирующими решениями (точками);</p>

<p>условия конкуренции одинаковых для всех решений;</p>

<p>в определенные моменты некоторые &quot;худшие&quot; решения бракуются (уничтожаются);</p>

<p>последовательный локальный спуск каждого решения (вначале грубый, затем более точный) происходит 
независимо от спуска других решений.</p>

<p>Конкуренция позволяет за счет отсева решений, спускающихся в локальные экстремумы, достаточно быстро 
находить глобальный экстремум в задачах, для которых значение функционала, осредненное по области притяжения 
глобального экстремума, меньше значения функционала, осредненного по всей области поиска, а область 
притяжения глобального экстремума не слишком мала.</p>

<p>Алгоритм конкурирующих точек - один из наиболее простых и эффективных по сравнению с другими 
распространенными алгоритмами поиска глобального экстремума. Так, например, трудоемкость поиска (затраты 
машинного времени) по этому алгоритму на порядок меньше по сравнению с алгоритмом случайного перебора
локальных экстремумов и на два порядка меньше по сравнению с методом Монте-Карло.</p>

<p>Для удобства изложения алгоритма решение будем называть также точкой (в многомерном пространстве поиска) 
и независимо от того, решается ли задача параметрической оптимизации (1)-(4) или задача структурной оптимизации 
(6)-(9), будем обозначать его <b>X</b>.</p>

<p>&nbsp;
<br><br>
<i><b>
<center>Алгоритм конкурирующих точек
</center></b></i>
</p>

<p>Алгоритм конкурирующих точек в общем виде включает следующие операции.</p>

<p>1. По процедуре СДС синтезируется <i>l</i> (<i>l</i> = <font FACE="Symbol">h</font> + <font FACE="Symbol">l</font><sub>0</sub>)
точек <img SRC="../img/image118.gif" WIDTH="26" HEIGHT="28"> (j = 1, ..., <i>l</i>), в которых определяется значение 
минимизируемой функции (критерия сравнения). Из этих <i>l</i> точек отбирается <font FACE="Symbol">h</font>
точек, имеющих наилучшие значения критерия, которые в дальнейшем называются основными. Запоминается 
наихудшее значение критерия основных точек <font FACE="Symbol">j</font><sub>0</sub>. При этом считается, что 
совершен нулевой глобальный (групповой) шаг поиска (t = 0).</p>

<p>Таким образом, на t-м групповом шаге поиска имеем основные точки</p>

<p><img SRC="../img/image119.gif" WIDTH="123" HEIGHT="33">, (10)</p>

<p>и, соответственно, невозрастающую последовательность чисел</p>

<p><font FACE="Symbol">j</font> <sub>0</sub>, <font FACE="Symbol">j</font><sub>1</sub>, …, <font FACE="Symbol">j</font> <sub>t</sub>. (11)</p>

<p>2. Каждая основная точка делает шаг локального поиска, в результате чего точки (10) переходят в новую последовательность</p>

<p><img SRC="../img/image120.gif" WIDTH="151" HEIGHT="33">. (12)</p>

<p>3. Синтезируется <font FACE="Symbol">l</font><sub>t+1</sub> дополнительных допустимых точек, каждой из 
которых разрешается сделать t+1 шагов локального поиска при условии, что после каждого шага с номером 
<font FACE="Symbol">t</font> (0 <font FACE="Symbol">&lt;=</font> 
<font FACE="Symbol">t</font> <font FACE="Symbol">&lt;=</font> t) ее критерий не хуже, чем соответствующий член
последовательности (11). При нарушении этого условия точка исключается и не участвует в дальнейшем поиске
глобального экстремума. Таким образом, имеется q (q<font FACE="Symbol"> &lt;=</font> 
<font FACE="Symbol">l</font> <sub>t+1</sub>) дополнительных точек, сделавших t + 1 шаг локального поиска:</p>

<p><img SRC="../img/image121.gif" WIDTH="151" HEIGHT="33">, (13)</p>

<p>4. Среди точек (12) и (13) отбирается <font FACE="Symbol">h</font> точек с лучшими критериями:</p>

<p><img SRC="../img/image122.gif" WIDTH="151" HEIGHT="33">, (14)</p>

<p>которые являются основными на (t + 1)-м групповом шаге поиска.
Значение худшего критерия точек из последовательности (14) дополняет последовательность (11) числом 
<font FACE="Symbol">j</font><sub>t+1</sub>.</p>

<p>5. Цикл по пп. 2-4 повторяется до нахождения глобального экстремума по заданным условиям прекращения 
поиска. В качестве условий прекращения поиска могут быть использованы, например, выполнение заданного числа 
Т групповых шагов.</p>

<p>Считая параметры <font FACE="Symbol">l</font><sub>i</sub> независимыми от i, будем иметь только два 
настраиваемых параметра алгоритма; <font FACE="Symbol">h</font> - число основных точек и 
<font FACE="Symbol">l</font> - число дополнительных точек.</p>

<p>Проведенные исследования позволяют рекомендовать следующие оптимальные значения этих параметров: 
<font FACE="Symbol">h</font> = 2…3, <font FACE="Symbol">l</font> = 12…18. Для простоты реализации алгоритма можно 
брать постоянные значения <font FACE="Symbol">h</font> и <font FACE="Symbol">l</font>.</p>

<p>В качестве процедуры ШЛП рекомендуется использовать следующие алгоритмы поиска локального экстремума:</p>

<p>алгоритм случайного поиска в подпространствах;</p>

<p>алгоритм случайного поиска с выбором по наилучшей пробе;</p>

<p>алгоритм сопряженных градиентов;</p>

<p>алгоритм Нельдера-Мида.</p>

<p>&nbsp;
<br><br>
<i><b>
<center>Алгоритм случайного поиска в подпространствах
</center></b></i>
</p>

<p>Рекомендуемый алгоритм случайного поиска в подпространствах можно записать в виде следующих 
рекуррентных выражений:</p>

<p ALIGN="left"><img SRC="../img/image123.gif" WIDTH="146" HEIGHT="25">;</p>

<p ALIGN="left"><img SRC="../img/image124.gif" WIDTH="83" HEIGHT="25"> при 
<img SRC="../img/image125.gif" WIDTH="236" HEIGHT="28">.</p>

<p ALIGN="left">Здесь h - число последовательно неудачных шагов поиска; 
<img SRC="../img/image126.gif" WIDTH="50" HEIGHT="25"> определяется по формуле:</p>

<p ALIGN="left"><img SRC="../img/image127.gif" WIDTH="433" HEIGHT="96"></p>

<p>где a-максимальная величина рабочего шага поиска;</p>

<p><img SRC="../img/image128.gif" WIDTH="31" HEIGHT="30"> - вектор случайных чисел; 
<img SRC="../img/image129.gif" WIDTH="151" HEIGHT="28"> - векторы приращений на (i-1)-, i-, (i+1)-м шагах поиска; 
<img SRC="../img/image130.gif" WIDTH="113" HEIGHT="28"> - векторы, описанные по формуле (1); 
<img SRC="../img/image131.gif" WIDTH="185" HEIGHT="28"> - значения критериев качества после осуществления на 
(i-1)-, i-, (i+1)-го шагов поиска.</p>

<p>Вектор случайных чисел</p>

<p><img SRC="../img/image132.gif" WIDTH="341" HEIGHT="66"></p>

<p>где <font FACE="Symbol">y</font> - случайное равномерно распределенное число, выбираемое из интервала [-1, 1]; 
k и L-случайные целые числа, распределенные на отрезке [1, n] и упорядоченные соотношением 
k<font FACE="Symbol"> &lt;=</font> L.</p>

<p>Имеются и другие модификации этого алгоритма, которые могут оказаться более эффективными.</p>

<p>&nbsp;
<br><br>
<i><b>
<center>Некоторые замечания относительно использования ГА
</center></b></i>
</p>


<p>Как можно заметить, ГА представляет собой смешанный алгоритм как для поиска глобального экстремума, так и 
для поиска локального. Это дает нам возможность упростить схему поиска глобально-оптимальных структур за счет 
использования в ней ГА как в качестве алгоритма СДС, так и в качестве алгоритма ШЛП. Какие плюсы и минусы 
данной схемы? Плюсы - простота реализации, универсальность. Минусы - по сравнению со специальными 
алгоритмами СДС, которые будут давать нам гораздо больше жизнеспособных экземпляров, очень уменьшится
скорость работы алгоритма. Таким образом, ГА предпочтительно использовать в следующих случаях: простые случаи,
в которых программирование специального метода будет продолжаться гораздо дольше, чем поиск решения
даже медленным методом; сложный случай, когда мы даже не знаем, с какой стороны подойти к задаче.</p>

<p>Интересно также отметить общие стороны ГА и алгоритма случайного поиска в подпространствах. Оба эти 
алгоритма при поиске оптимума изменяют не все возможные переменные, а только часть их. Это, казалось бы 
мелкое усовершенствование, ведет к поразительным результатам - эти алгоритмы в среднем дают трудоемкость 
нахождения решения на порядок ниже, чем метод сопряженных градиентов и на два порядка ниже, чем метод 
случайного поиска по всему пространству переменных. Другими словами, эти алгоритмы используют одно из свойств
нашего мира - независимость различных подсистем объектов.</p>

<p>Возвращаясь к основному вопросу данных лекций - интеллектуальным задачам, скажем, что данные алгоритмы 
ведут себя как опытные инженеры при поиске неисправностей (очень интеллектуальная по всем параметрам задача), 
и соблюдают заповедь - &quot;никогда не трогать все сразу, только по очереди&quot;.</p>

<p>&nbsp;
<br><br>
<i><b>
<center>Автоматизированный синтез физических принципов действия
</center></b></i>
</p>

<i>
<p>Фонд физико-технических эффектов</p>
</i>

<p>Поиск физических принципов действия (ФПД) технических объектов и технологий - один из самых высоких 
уровней инженерного творчества, позволяющий получать принципиально новые решения, включая и пионерные. 
Однако разработка ФПД - это и наиболее сложная задача инженерного творчества, поскольку человек вынужден
варьировать и оценивать не только конструктивные признаки, обычно хорошо обозримые и логически увязанные друг 
с другом. Здесь приходится абстрагироваться на уровне физико-технических эффектов (ФТЭ), не всегда очевидных и 
достаточно глубоко познанных. В отличие от новых комбинаций конструктивных признаков мысленно представить и 
оценить новые комбинации ФТЭ значительно труднее.</p>

<p>Главная трудность состоит в том, что инженер обычно знает до 200, а достаточно свободно использует не более 
100 ФТЭ, хотя в научно-технической литературе их описано более 3000. Кроме того, в связи с возрастающими 
темпами развития науки и техники, число ФТЭ постоянно увеличивается. Таким образом, в наше время у 
разработчиков новой техники существует очень большой и возрастающий дефицит информации, необходимой для 
решения задач поиска новых ФПД.</p>

<p>Излагаемые в настоящей главе методы автоматизированного поиска новых ФПД позволяют, во-первых, в 
большой мере устранить указанный дефицит информации по ФТЭ; во-вторых, значительно облегчить получение новых 
работоспособных комбинаций ФТЭ, т. е. новых ФПД изделий и технологий.</p>

<br><br>
<b>
<p>Таблица 1. Пример карты описания физико-технических эффектов (ФТЭ)</p>
</b>

<table BORDER="1" CELLSPACING="1" CELLPADDING="9">
  <tr>
    <td WIDTH="50%" VALIGN="TOP">Тепловое расширение твердых тел</td>
    <td WIDTH="50%" VALIGN="TOP">3-21</td>
  </tr>
  <tr>
    <td WIDTH="50%" VALIGN="TOP">Тепловое расширение</td>
    <td WIDTH="50%" VALIGN="TOP">3</td>
  </tr>
  <tr>
    <td VALIGN="TOP" COLSPAN="2"><p ALIGN="CENTER">
     <img SRC="../img/image133.gif" WIDTH="462" HEIGHT="156"></td>
  </tr>
  <tr>
    <td WIDTH="50%" VALIGN="TOP">
    <b><p>Сущность и схема ФТЭ</p></b>
    <p>Тепловое расширение твердых тел связано с несимметричностью (ангармонизмом) тепловых колебаний атомов, 
    благодаря чему межатомные расстояния с ростом температуры увеличиваются, что приводит к изменению 
    линейных размеров тела</p>
    <p><img SRC="../img/image134.gif" WIDTH="340" HEIGHT="136">
    <p><b>Диапазоны изменения</b></p>
    <p>Диапазоны температур T<sub>1</sub> и Т<sub>2</sub> должны принадлежать одной аллотропической 
    модификации и быть меньше температуры плавления.</td>
    <td WIDTH="50%" VALIGN="TOP"><b><p>Математическая модель ФТЭ</b>
    <p>e=a*dT</p>
    <p>где e=dL/L1 – относительное удлинение</p>
    <p>dT = T2-T1 – разница температур</p>
    <p>a – коэффициент линейного расширения (берется из таблицы)</p>
    <p>&nbsp;</p>
    <b><p>Существование обратного ФТЭ</p></b>
    <p>Нет</p>
    <b><p>Применение ФТЭ в технике</p></b>
    <p>В приборостроении, электротехнической промышленности, энергетике; при конструировании установок, 
    приборов и машин, работающих в переменных температурных условиях, а также использующих тепловое расширение 
    тел.</td>
  </tr>
</table>

<p>В основе этих методов лежит база данных, в которой каждый ФТЭ имеет трехуровневое описание. На первом 
уровне дается самое короткое качественное описание ФТЭ. Второй уровень - это стандартная карта описания ФТЭ 
размером в одну страницу, где дается наиболее важная и легко обозримая информация о ФТЭ и его использование в
технике. В табл. 1 приведен пример карты описания эффекта теплового расширения, из которого понятно содержимое
рубрик описания, а также видно, что первый уровень описания включается в карту описания.</p>

<p>Третий уровень описания совместно с информацией второго уровня дает более подробное описание ФТЭ, объем 
которого обычно составляет 5-10 машинописных страниц. </p>

<p>&nbsp;
<br><br>
<i><b>
<center>Синтез физических принципов действия по заданной физической операции
</center></b></i>
</p>

<p>Существуют элементарные структуры ФПД, которые основываются на одном ФТЭ. Для поиска (синтеза) таких 
ФПД, определяют соответствие между физической операцией, которую требуется реализовать, и ФТЭ, с помощью
которого можно осуществить такую реализацию.</p>

<p>Если принять во внимание формализованное описание физической операции и ФТЭ, можно отметить следующее 
соответствие компонент:</p>

<p>A<sub>T</sub>&lt;-&gt; A, C<sub>T</sub>&lt;-&gt; C,</p>

<p>где А и С - входные и, соответственно, выходные потоки вещества, энтропии и т.д.</p>

<p>Так, например, для физической операции А<sub>Т</sub> - &quot;сила&quot;, С<sub>Т</sub> - "линейная
деформация" будет найден ФТЭ: закон Гука (А - сила, напряжение; С - линейная деформация, В-упругое тело), на 
котором основаны пружинные весы.</p>

<p>В технике также распространен другой тип элементарной структуры ФПД, основанный на многократном или 
суммарном использовании одного и того же ФТЭ. Например, в катушках индуктивности каждый виток проводника 
реализует преобразование электрического тока в электромагнитное поле. Аналогичную структуру ФПД имеют 
аккумуляторные батареи, выпрямители, конденсаторы, усилители и т. д.</p>

<p>Однако большинство ФПД изделий имеют сложную структуру, в которой используется одновременно несколько 
различных ФТЭ. Синтез и работа таких ФПД основывается на следующем правиле совместимости ФТЭ.</p>

<p>Два последовательно расположенных ФТЭ</p>

<p>(A<sub>i</sub>, B<sub>i</sub>, C<sub>i</sub>), (A<sub>i+1</sub>, В<sub> i+1</sub>, C<sub> i+1</sub>)</p>

<p>будем считать совместимыми, если результат воздействия С<sub>i</sub> предыдущего ФТЭ эквивалентен
входному воздействию A<sub> i+1</sub> последующего ФТЭ, т. е. если C<sub>i</sub> и А<sub> i+1</sub> 
характеризуются одними и теми же физическими величинами и имеют совпадающие значения этих величин.</p>

<p>Два совместимых ФТЭ могут быть объединены, при этом входное воздействие A<sub>i</sub>, будет вызывать 
результат C<sub> i+1</sub>, т. е. получается преобразователь</p>

<p>A<sub>i</sub> =&gt; B<sub>i</sub> =&gt; (C<sub>i</sub> <font FACE="Symbol">&lt;-&gt;</font> 
A<sub>i+1</sub>)=&gt; В<sub> i+1</sub> =&gt; C<sub> i+1</sub> (15)</p>

<p>В связи с этим дадим следующее определение ФПД.</p>

<p>Физическим принципом действия ТО будем называть структуру совместимых и объединенных ФТЭ, 
обеспечивающих преобразование заданного начального входного воздействия А<sub>1</sub> в заданный конечный 
результат (выходной эффект) С<sub>n</sub>. Здесь имеется в виду, что число используемых ФТЭ не менее n.</p>

<p>Уточним понятие совместимости ФТЭ. Для имеющегося фонда ФТЭ имеет место три вида совместимости:</p>

<p>качественная совместимость по совпадению наименований входов и выходов (пример совместимости:
"электрический ток - электрический ток");</p>

<p>качественная совместимость по совпадению качественных характеристик входов и выходов (пример 
несовместимости: &quot; электрический ток переменный - электрический ток постоянный&quot;);</p>

<p>количественная совместимость по совпадению значений физических величин (пример совместимости: &quot;
электрический ток постоянный I=10A, U=110В - электрический ток постоянный I = 5-20 A, U = 60-127 В&quot;).</p>


<p><b>Поиск допустимых ФПД.</b> Опишем порядок работы с учебной системой автоматизированного синтеза 
ФПД. Работа по поиску допустимых ФПД состоит из четырех этапов.</p>

<p><b>1-й этап. Подготовка технического задания.</b> При подготовке технического задания составляют описание 
функции разрабатываемого ТО и его физической операции. Описание физической операции рекомендуется делать 
с учетом синонимов в наименованиях "выходов" и "входов", т.е. в итоге может получиться несколько вариантов 
операции. Если имеется словарь технических функций, то эта работа выполняется значительно быстрее и 
правильнее.</p>

<p>После формулировки вариантов физической операции по компонентам А<sub>Т</sub>, С<sub>Т</sub>,
с помощью словаря "входов" и "выходов" (табл. 2) описывают совпадающие или близкие по содержанию
входы и выходы, т. е. выявляют соответствия</p>

<p>(А<sub>Т</sub>&lt;-&gt;А<sub>1</sub>), (С<sub>Т</sub>&lt;-&gt;<sub> </sub>С<sub>n</sub>).</p>

<p>Наличие таких соответствий позволяет сформулировать одно или несколько технических заданий</p>

<p>А<sub>1</sub>=&gt; С<sub>n</sub>. (16)</p>


<p><b>2-й этап. Синтез возможных ФПД</b>. По техническому заданию (16) ЭВМ выбирает из фонда ФТЭ такие, у
которых одновременно выполняются условия</p>

<p>(А<sub>J</sub>&lt;-&gt; А<sub>1</sub>), (С<sub>J</sub>&lt;-&gt; С<sub>n</sub>).</p>

<p>Все эти ФТЭ представляют ФПД, использующие один ФТЭ.</p>

<p>Далее из фонда ФТЭ выбираются такие, которые обеспечивают выполнение условия</p>

<p>A<sub>i</sub>&lt;-&gt;<sub> </sub>A<sub>1</sub>, i = 1,…., k (17)</p>

<p>или</p>

<p>C<sub>J</sub>&lt;-&gt; C<sub>n</sub>, j = 1, …, m. (18)</p>

<p>Из множеств ФТЭ (17) и (18) выбирают такие пары ФТЭ, у которых выполняется условие пересечения</p>

<p>C<sub>i</sub>&lt;-&gt; A<sub>J</sub>,</p>

<p>указывающее на то, что эти пары ФТЭ совместимы и образуют ФПД из двух ФТЭ по формуле (15)</p>

<p>A<sub>i</sub> =&gt; B<sub>i</sub> =&gt; (C<sub>i</sub> <font face="Symbol">&lt;-&gt;</font> A<sub>J</sub>) =&gt;
В<sub>J</sub> =&gt; C<sub>J</sub>. (19)</p>

<p>Для множеств ФТЭ, отобранных по условиям (17) и (18), при невыполнении условия (19) проверяется
возможность образования цепочек из трех ФТЭ:</p>

<p>A<sub>i</sub> =&gt; B<sub>i</sub> =&gt; (C<sub>i</sub> <font face="Symbol">&lt;-&gt;</font> A<sub>t</sub>)
=&gt; В<sub>t</sub> =&gt; (C<sub>t</sub> <font face="Symbol">&lt;-&gt;</font> A<sub>J</sub>)=&gt; В<sub>J</sub> 
=&gt; C<sub>J</sub>,</p>

<p>где i = 1,…., k, j = 1, …, m, t = 1, …, km..</p>

<p><b>Таблица 2. Фрагмент словаря "входов" ("выходов")</b></p>

<table BORDER="1" CELLSPACING="1" CELLPADDING="9" WIDTH="100%">
  <tr>
    <td WIDTH="10%" VALIGN="MIDDLE" ROWSPAN="2"><p ALIGN="CENTER" style="text-indent: 0; margin-left: 0; margin-right: 0">№ п/п</td>
    <td WIDTH="22%" VALIGN="MIDDLE" ROWSPAN="2"><p ALIGN="CENTER" style="text-indent: 0; margin-left: 0; margin-right: 0">Наименование</p>
    <p ALIGN="CENTER" style="text-indent: 0; margin-left: 0; margin-right: 0">&quot;входа&quot; (&quot;выхода&quot;)</td>
    <td WIDTH="33%" VALIGN="MIDDLE" ROWSPAN="2"><p ALIGN="CENTER" style="text-indent: 0; margin-left: 0; margin-right: 0">Качественная </p>
    <p ALIGN="CENTER" style="text-indent: 0; margin-left: 0; margin-right: 0">характеристика</p>
    <p ALIGN="CENTER" style="text-indent: 0; margin-left: 0; margin-right: 0">&quot;входа&quot; (&quot;выхода&quot;)</td>
    <td WIDTH="36%" VALIGN="MIDDLE" COLSPAN="2">
    <p ALIGN="CENTER" style="text-indent: 0; margin-left: 0; margin-right: 0">Физическая величина, характеризующая &quot;вход&quot; (&quot;выход&quot;)</td>
  </tr>
  <tr>
    <td WIDTH="23%" VALIGN="MIDDLE"><p ALIGN="CENTER" style="text-indent: 0; margin-left: 0; margin-right: 0">Наименование</td>
    <td WIDTH="12%" VALIGN="MIDDLE"><p ALIGN="CENTER" style="text-indent: 0; margin-left: 0; margin-right: 0">Обозначение</td>
  </tr>
  <tr>
    <td WIDTH="10%" VALIGN="TOP"><p style="text-indent: 0; margin-left: 0; margin-right: 0">1</td>
    <td WIDTH="22%" VALIGN="TOP"><p style="text-indent: 0; margin-left: 0; margin-right: 0">Электрическое поле</td>
    <td WIDTH="33%" VALIGN="TOP"><p style="text-indent: 0; margin-left: 0; margin-right: 0">Постоянное</p>
    <p style="text-indent: 0; margin-left: 0; margin-right: 0">Переменное</p>
    <p style="text-indent: 0; margin-left: 0; margin-right: 0">Однородное</p>
    <p style="text-indent: 0; margin-left: 0; margin-right: 0">Неоднородное</p>
    <p style="text-indent: 0; margin-left: 0; margin-right: 0">Высокочастотное</td>
    <td WIDTH="23%" VALIGN="TOP"><p style="text-indent: 0; margin-left: 0; margin-right: 0">Напряженность электрического поля.</p>
    <p style="text-indent: 0; margin-left: 0; margin-right: 0">Разность потенциалов ЭДС</td>
    <td WIDTH="12%" VALIGN="TOP"><p style="text-indent: 0; margin-left: 0; margin-right: 0">&nbsp;</p>
    <p style="text-indent: 0; margin-left: 0; margin-right: 0"><font face="Symbol">D</font> <font face="Symbol">j</font> </p>
    <p style="text-indent: 0; margin-left: 0; margin-right: 0"><font face="Symbol">e</font></td>
  </tr>
  <tr>
    <td WIDTH="10%" VALIGN="TOP"><p style="text-indent: 0; margin-left: 0; margin-right: 0">2</td>
    <td WIDTH="22%" VALIGN="TOP"><p style="text-indent: 0; margin-left: 0; margin-right: 0">Магнитное поле</td>
    <td WIDTH="33%" VALIGN="TOP"><p style="text-indent: 0; margin-left: 0; margin-right: 0">Постоянное</p>
    <p style="text-indent: 0; margin-left: 0; margin-right: 0">Переменное</p>
    <p style="text-indent: 0; margin-left: 0; margin-right: 0">Однородное</p>
    <p style="text-indent: 0; margin-left: 0; margin-right: 0">Неоднородное</td>
    <td WIDTH="23%" VALIGN="TOP"><p style="text-indent: 0; margin-left: 0; margin-right: 0">Магнитная индукция</p>
    <p style="text-indent: 0; margin-left: 0; margin-right: 0">Магнитный поток</td>
    <td WIDTH="12%" VALIGN="TOP"><p style="text-indent: 0; margin-left: 0; margin-right: 0">В</p>
    <p style="text-indent: 0; margin-left: 0; margin-right: 0">Ф</td>
  </tr>
  <tr>
    <td WIDTH="10%" VALIGN="TOP"><p style="text-indent: 0; margin-left: 0; margin-right: 0">3</td>
    <td WIDTH="22%" VALIGN="TOP"><p style="text-indent: 0; margin-left: 0; margin-right: 0">Электромагнитное поле</td>
    <td WIDTH="33%" VALIGN="TOP"><p style="text-indent: 0; margin-left: 0; margin-right: 0">Ультрафиолетовое</p>
    <p style="text-indent: 0; margin-left: 0; margin-right: 0">Видимое</p>
    <p style="text-indent: 0; margin-left: 0; margin-right: 0">Инфракрасное</p>
    <p style="text-indent: 0; margin-left: 0; margin-right: 0">Рентгеновское</p>
    <p style="text-indent: 0; margin-left: 0; margin-right: 0">Линейно поляризованное</p>
    <p style="text-indent: 0; margin-left: 0; margin-right: 0">Эллиптически поляризованное</td>
    <td WIDTH="23%" VALIGN="TOP"><p style="text-indent: 0; margin-left: 0; margin-right: 0">Интенсивность</p>
    <p style="text-indent: 0; margin-left: 0; margin-right: 0">Частота</p>
    <p style="text-indent: 0; margin-left: 0; margin-right: 0">Длина волны</p>
    <p style="text-indent: 0; margin-left: 0; margin-right: 0">Амплитуда</td>
    <td WIDTH="12%" VALIGN="TOP"><p style="text-indent: 0; margin-left: 0; margin-right: 0">S</p>
    <p style="text-indent: 0; margin-left: 0; margin-right: 0"><font face="Symbol">n</font> </p>
    <p style="text-indent: 0; margin-left: 0; margin-right: 0"><font face="Symbol">l</font> </p>
    <p style="text-indent: 0; margin-left: 0; margin-right: 0">A</td>
  </tr>
  <tr>
    <td WIDTH="10%" VALIGN="TOP"><p style="text-indent: 0; margin-left: 0; margin-right: 0">4</td>
    <td WIDTH="22%" VALIGN="TOP"><p style="text-indent: 0; margin-left: 0; margin-right: 0">Акустическая волна</td>
    <td WIDTH="33%" VALIGN="TOP"><p style="text-indent: 0; margin-left: 0; margin-right: 0">Звуковая</p>
    <p style="text-indent: 0; margin-left: 0; margin-right: 0">Ультразвуковая</td>
    <td WIDTH="23%" VALIGN="TOP"><p style="text-indent: 0; margin-left: 0; margin-right: 0">Частота</p>
    <p style="text-indent: 0; margin-left: 0; margin-right: 0">Мощность излучения</p>
    <p style="text-indent: 0; margin-left: 0; margin-right: 0">Интенсивность</td>
    <td WIDTH="12%" VALIGN="TOP"><p style="text-indent: 0; margin-left: 0; margin-right: 0">f</p>
    <p style="text-indent: 0; margin-left: 0; margin-right: 0">P</p>
    <p style="text-indent: 0; margin-left: 0; margin-right: 0">J</td>
  </tr>
  <tr>
    <td WIDTH="10%" VALIGN="TOP"><p style="text-indent: 0; margin-left: 0; margin-right: 0">5</td>
    <td WIDTH="22%" VALIGN="TOP"><p style="text-indent: 0; margin-left: 0; margin-right: 0">Сила</td>
    <td WIDTH="33%" VALIGN="TOP"><p ALIGN="CENTER" style="text-indent: 0; margin-left: 0; margin-right: 0">-</td>
    <td WIDTH="23%" VALIGN="TOP"><p style="text-indent: 0; margin-left: 0; margin-right: 0">Сила</td>
    <td WIDTH="12%" VALIGN="TOP"><p style="text-indent: 0; margin-left: 0; margin-right: 0">F</td>
  </tr>
  <tr>
    <td WIDTH="10%" VALIGN="TOP"><p style="text-indent: 0; margin-left: 0; margin-right: 0">6</td>
    <td WIDTH="22%" VALIGN="TOP"><p style="text-indent: 0; margin-left: 0; margin-right: 0">Температура</td>
    <td WIDTH="33%" VALIGN="TOP"><p ALIGN="CENTER" style="text-indent: 0; margin-left: 0; margin-right: 0">-</td>
    <td WIDTH="23%" VALIGN="TOP"><p style="text-indent: 0; margin-left: 0; margin-right: 0">Температура</td>
    <td WIDTH="12%" VALIGN="TOP"><p style="text-indent: 0; margin-left: 0; margin-right: 0">T</td>
  </tr>
</table>


<p>Далее для тех же множеств проверяется возможность образования цепочек из четырех и из пяти ФТЭ.</p>

<p>Встречным наращиванием цепочек совместимых ФТЭ от A<sub>1</sub> до С<sub>n</sub> можно получать новые 
варианты ФПД, включающие и большее число ФТЭ. Однако при числе ФТЭ, превышающем пять, резко возрастает
вычислительная сложность такого метода из-за комбинаторного характера задачи и существенного роста числа 
анализируемых промежуточных вариантов. Кроме того, ФПД с числом ФТЭ более пяти с практической точки зрения 
обычно не относятся к наиболее рациональным.</p>

<p>Изложенный алгоритм представляет собой один из возможных простых способов синтеза ФПД. Можно 
использовать и другие алгоритмы, ориентированные на предварительно организованную базу данных по ФТЭ.</p>

<p>Суть этой организации состоит в определенном построении сетевых графов из всех совместимых ФТЭ.</p>

<p>Система синтеза ФПД по введенному техническому заданию позволяет получать варианты ФПД. Кроме того, в 
ней в качестве дополнительных исходных данных могут быть использованы следующие ограничения:</p>

<p>максимальное число ФТЭ в цепочке (например, n &lt; 4);</p>

<p>число получаемых вариантов ФПД (например, m &lt; 20);</p>

<p>запрещение (или предпочтительность) использования определенных входов А и выходов С;</p>

<p>запрещение (иди предпочтительность) использования определенных объектов В;</p>

<p>другие ограничения.</p>

<p><b>3-й этап. Анализ совместимости ФТЭ в цепочках.</b> Полученные на 2-м этапе цепочки возможных ФПД
удовлетворяют только .качественной совместимости по совпадению наименований входов и выходов. Хотя среди 
полученных ФПД ЭВМ может отсекать варианты по условию совместимости качественных характеристик, а в 
промышленной системе - по количественной совместимости, иногда бывает целесообразно данную работу 
выполнять в полуавтоматическом режиме</p>

<p><b>4-й этап. Разработка принципиальной схемы.</b> </p>

<p>&nbsp;
<br><br>
<i><b>
<center>Заключительные замечания
</center></b></i>
</p>

<p>В данной главе рассмотрены некоторые алгоритмы, которые мы можем отнести к эволюционным и/или 
переборным. Сразу обращает на себя внимание тот факт, что во всех эволюционных алгоритмах в той или иной мере 
присутствует перебор, который придает им одно уникальное свойство - универсальность. В то же время, ни один из 
передовых алгоритмов не использует перебор в чистом виде. Все они имеют те или иные схемы для предотвращения 
полного перебора, для чего практически всегда используется такое свойство окружающего нас мира (не только
материального), как ступенчатость - ограниченность воздействия одних систем на соседние, в результате чего 
появляется возможность организовывать параллельный поиск.</p>

<p>&nbsp;
<br><br>
<i><b>
<center>Слабосвязанный мир
</center></b></i>
</p>


<p>Автор данного конспекта лекций является сторонником мнения, что мир, в котором мы живем, является миром со
слабыми причинно-следственными связями. Что имеется в виду?</p>

<p>Представим себе, что Вы пишете статью, а за окном упал осенний кленовый лист, которого Вы не видите. Если 
такое событие повлияет на текст, который вы пишете, то можно сказать, что наш мир настолько насыщен
причинно-следственными связями, что любое событие окажет большое или малое влияние на события, произошедшие 
после него. Такой мир будем называть сильносвязанным.</p>

<p>Однако весь наш опыт доказывает обратное. К примеру, на самолет не успел один из пассажиров. На 
подавляющее большинство остальных пассажиров это не окажет никакого влияния. Дело в том, что обычно реальные 
системы имеют так называемые &quot;ступенчатые функции&quot;, которые при небольших вариациях возмущающих
воздействий не дают им распространяться к другим системам. Более того, именно благодаря слабой связанности 
мира мы можем выделить в нем отдельные системы, а в них подсистемы. В противном случае весь мир представлял 
бы собой одну настолько сложную систему, что самый великий гений не мог бы разобраться и жить в этом безумном 
мире, не говоря уж об обычной амебе.</p>

<p>Биологическим системам управления приходится адаптироваться к окружающей среде, принимая форму 
зеркального отражения ее структуры, поэтому в нашем мозгу всегда можно выделить подсистемы, которые никоим 
образом не должны влиять друг на друга в обученном состоянии. К примеру, рассмотрим человека, управляющего 
автомобилем с ручной коробкой передач. В тот момент, когда его правая рука переключает очередную передачу, 
левая должна продолжать удерживать руль в положении &quot;прямо&quot; независимо от того, что делает правая. 
Если данные подсистемы будут объединены, то при каждом переключении передачи автомобиль начнет вилять, что и 
случается у новичков. В процессе обучения вождению автомобиля происходит ослабление внутренних связей между
нейронными ансамблями, управляющими процессами переключения передач и вращения руля, в результате чего 
устраняется эффект &quot;виляния&quot;. Можно привести и более простой пример: человек с нормальной 
координацией движений, продолжает двигаться прямо вне зависимости от того, куда повернута его голова.</p>

<p>Таких примеров можно привести множество.</p>

<p>&nbsp;
<br><br>
<i><b>
<center>Разделяй и властвуй
</center></b></i>
</p>

<p>Рассмотрим теперь построение алгоритмов оптимизации структуры и параметров. Несмотря на их огромное 
разнообразие, можно выделить основную черту: оптимизируемый объект является &quot;черным ящиком&quot;, 
который оптимизируется целиком. Для полученного на очередном шаге набора параметров достигнутый результат 
оценивается только по общей оценочной функции. Это приводит к тому, что малые улучшения в работе отдельных 
локальных подсистем не закрепляются на фоне ухудшения работы остальных. Можно назвать еще некоторые 
недостатки подобной реализации - сложности в подборе шага, коэффициента мутаций и т. д., но это уже решаемые
мелочи.</p>

<p>Незакрепление малых улучшений в подсистемах при последовательной адаптации приводит к одному результату - 
в сложных системах, состоящих из большого количества подсистем, скорость обучения катастрофически снижается.</p>

<p>Здесь примером могли бы служить N колес с буквами А и В на ободе, где буквы А занимали бы k-ю долю 
окружности, а В - остальную ее часть. Все колеса приводят во вращение и дают им остановиться; остановка колеса 
на букве А считается &quot;успехом&quot;. Сравним три способа сложения этих частных успехов в Большой Успех,
который будем считать достигнутым только тогда, когда все колеса остановятся на букве А.</p>

<p><b>Случай 1</b>. Приводятся во вращение все N колес; если все они дадут букву А, регистрируется Успех и пробы 
заканчиваются; в других случаях колеса снова приводятся во вращение - и так далее, пока все А не появятся сразу. 
В этом случае потребуется в среднем (1/k)<sup>N</sup> проб.</p>

<p><b>Случай 2</b>. Вращается 1-е колесо; если оно остановится на А, оно остается в этом положении; в противном 
случае его вращают снова. Когда оно, наконец, остановится на А, таким же образом вращают 2-е колесо и т. д. Так 
поступают до тех пор, пока все N колес не остановятся на секторе А. Здесь в среднем потребуется N/k проб.</p>

<p><b>Случай 3</b>. Приводятся во вращение все N колес; те, которые покажут А, остаются в этом положении, а те, 
которые покажут В, вращаются снова. При дальнейших появлениях А соответствующие колеса также остаются в 
покое. Среднее число проб равно среднему числу проб в самой длинной серии из N серий проб с одним колесом и 
может быть найдено из распределения длин таких серий; оно будет несколько больше 1/k.</p>

<p>Случайный поиск служит полным аналогом 1-го случая. Многие из остальных алгоритмы занимают промежуточное 
положение между первым и вторым случаем (случайный поиск в подпространствах, генетический алгоритм и т. д.).
Очевидно, что человек как правило решает свои проблемы независимо друг от друга, что соответствует третьему 
случаю.</p>

<p>Таким образом, перспективные алгоритмы должны предусматривать возможность разделения целей на подцели, 
которые не зависят друг от друга. </p>

</body>
</html>

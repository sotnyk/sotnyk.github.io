<html>
<head>
	<title>Нейронные сети: обучение без учителя</title>
	<link rel=stylesheet href="..\css\lectures.css" type="text/css">
	<meta charset="utf-8"/>
</head>

<body bgcolor="#F2F2F2">

<center><h3><a name="_Toc429431271">Нейронные сети: обучение без учителя</A></h3></center>

<p>Рассмотренный в предыдущей главе алгоритм обучения нейронной сети с помощью процедуры обратного 
распространения подразумевает наличие некоего внешнего звена, предоставляющего сети кроме входных так же и 
целевые выходные образы. Алгоритмы, пользующиеся подобной концепцией, называются алгоритмами обучения с 
учителем. Для их успешного функционирования необходимо наличие экспертов, создающих на предварительном этапе 
для каждого входного образа эталонный выходной. Так как создание искусственного интеллекта движется по пути 
копирования природных прообразов, ученые не прекращают спор на тему, можно ли считать алгоритмы обучения с 
учителем натуральными или же они полностью искусственны. Например, обучение человеческого мозга, на первый взгляд, 
происходит без учителя: на зрительные, слуховые, тактильные и прочие рецепторы поступает информация извне, и внутри 
нервной системы происходит некая самоорганизация. Однако, нельзя отрицать и того, что в жизни человека не мало 
учителей – и в буквальном, и в переносном смысле, – которые координируют внешние воздействия. Вместе в тем, чем бы 
ни закончился спор приверженцев этих двух концепций обучения, они обе имеют право на существование.</p>

<p>Главная черта, делающая обучение без учителя привлекательным, – это его "самостоятельность". Процесс обучения, 
как и в случае обучения с учителем, заключается в подстраивании весов синапсов. Некоторые алгоритмы, правда, 
изменяют и структуру сети, то есть количество нейронов и их взаимосвязи, но такие преобразования правильнее назвать 
более широким термином – самоорганизацией, и в рамках данной главы они рассматриваться не будут. Очевидно, что 
подстройка синапсов может проводиться только на основании информации, доступной в нейроне, то есть его состояния и 
уже имеющихся весовых коэффициентов. Исходя из этого соображения и, что более важно, по аналогии с известными 
принципами самоорганизации нервных клеток, построены алгоритмы обучения Хебба.</p>

<p>Сигнальный метод обучения Хебба заключается в изменении весов по следующему правилу:</p>

<p><IMG SRC="..\img\image48.gif" WIDTH=266 HEIGHT=33>&#9;(1)</p>

<p>где y<SUB>i</SUB><SUp>(n-1)</SUp> – выходное значение нейрона i слоя (n-1), y<SUB>j</SUB><SUp>(n)</SUp> – 
выходное значение нейрона j слоя n; w<SUB>ij</SUB>(t) и w<SUB>ij</SUB>(t-1) – весовой коэффициент синапса, 
соединяющего эти нейроны, на итерациях t и t-1 соответственно; <FONT FACE="Symbol">&#97;</font> – коэффициент 
скорости обучения. Здесь и далее, для общности, под n подразумевается произвольный слой сети. При обучении по 
данному методу усиливаются связи между возбужденными нейронами.</p>

<p>Существует также и дифференциальный метод обучения Хебба.</p>

<p><IMG SRC="..\img\image49.gif" WIDTH=541 HEIGHT=36>&#9;(2)</p>

<p>Здесь y<SUB>i</SUB><SUp>(n-1)</SUp>(t) и y<SUB>i</SUB><SUp>(n-1)</SUp>(t-1) – выходное значение нейрона i слоя 
n-1 соответственно на итерациях t и t-1; y<SUB>j</SUB><SUp>(n)</SUp>(t) и y<SUB>j</SUB><SUp>(n)</SUp>(t-1) – то же 
самое для нейрона j слоя n. Как видно из формулы (2), сильнее всего обучаются синапсы, соединяющие те нейроны, 
выходы которых наиболее динамично изменились в сторону увеличения.</p>

<p>Полный алгоритм обучения с применением вышеприведенных формул будет выглядеть так:</p>

<p>1. На стадии инициализации всем весовым коэффициентам присваиваются небольшие случайные значения.</p>

<p>2. На входы сети подается входной образ, и сигналы возбуждения распространяются по всем слоям согласно 
принципам классических прямопоточных (feedforward) сетей[1], то есть для каждого нейрона рассчитывается взвешенная 
сумма его входов, к которой затем применяется активационная (передаточная) функция нейрона, в результате чего 
получается его выходное значение y<SUB>i</SUB><SUp>(n)</SUp>, i=0...M<SUB>i</SUB>-1, где M<SUB>i</SUB> – число 
нейронов в слое i; n=0...N-1, а N – число слоев в сети.</p>

<p>3. На основании полученных выходных значений нейронов по формуле (1) или (2) производится изменение весовых 
коэффициентов.</p>

<p>4. Цикл с шага 2, пока выходные значения сети не застабилизируются с заданной точностью. Применение этого нового 
способа определения завершения обучения, отличного от использовавшегося для сети обратного распространения, 
обусловлено тем, что подстраиваемые значения синапсов фактически не ограничены.</p>

<p>На втором шаге цикла попеременно предъявляются все образы из входного набора.</p>

<p>Следует отметить, что вид откликов на каждый класс входных образов не известен заранее и будет представлять собой 
произвольное сочетание состояний нейронов выходного слоя, обусловленное случайным распределением весов на стадии 
инициализации. Вместе с тем, сеть способна обобщать схожие образы, относя их к одному классу. Тестирование обученной
сети позволяет определить топологию классов в выходном слое. Для приведения откликов обученной сети к удобному 
представлению можно дополнить сеть одним слоем, который, например, по алгоритму обучения однослойного перцептрона 
необходимо заставить отображать выходные реакции сети в требуемые образы.</p>

<p>Другой алгоритм обучения без учителя – алгоритм Кохонена – предусматривает подстройку синапсов на основании их 
значений от предыдущей итерации.</p>

<p><IMG SRC="..\img\image50.gif" WIDTH=330 HEIGHT=36>&#9;(3)</p>

<p>Из вышеприведенной формулы видно, что обучение сводится к минимизации разницы между входными сигналами 
нейрона, поступающими с выходов нейронов предыдущего слоя y<SUB>i</SUB><SUp>(n-1)</SUp>, и весовыми 
коэффициентами его синапсов.</p>

<p>Полный алгоритм обучения имеет примерно такую же структуру, как в методах Хебба, но на шаге 3 из всего слоя 
выбирается нейрон, значения синапсов которого максимально походят на входной образ, и подстройка весов по 
формуле (3) проводится только для него. Эта, так называемая, аккредитация может сопровождаться затормаживанием 
всех остальных нейронов слоя и введением выбранного нейрона в насыщение. Выбор такого нейрона может 
осуществляться, например, расчетом скалярного произведения вектора весовых коэффициентов с вектором входных 
значений. Максимальное произведение дает выигравший нейрон.</p>

<p>Другой вариант – расчет расстояния между этими векторами в p-мерном пространстве, где p – размер векторов.</p>

<p><IMG SRC="..\img\image51.gif" WIDTH=196 HEIGHT=63>, &#9;(4)</p>

<p>где j – индекс нейрона в слое n, i – индекс суммирования по нейронам слоя (n-1), w<SUB>ij</SUB> – вес синапса, 
соединяющего нейроны; выходы нейронов слоя (n-1) являются входными значениями для слоя n. Корень в формуле (4) 
брать не обязательно, так как важна лишь относительная оценка различных D<SUB>j</SUB>.</p>

<p>В данном случае, "побеждает" нейрон с наименьшим расстоянием. Иногда слишком часто получающие аккредитацию 
нейроны принудительно исключаются из рассмотрения, чтобы "уравнять права" всех нейронов слоя. Простейший вариант 
такого алгоритма заключается в торможении только что выигравшего нейрона.</p>

<p>При использовании обучения по алгоритму Кохонена существует практика нормализации входных образов, а так же – 
на стадии инициализации – и нормализации начальных значений весовых коэффициентов.</p>

<p><IMG SRC="..\img\image52.gif" WIDTH=131 HEIGHT=66>, &#9;(5)</p>

<p>где x<SUB>i</SUB> – i-ая компонента вектора входного образа или вектора весовых коэффициентов, а n – его 
размерность. Это позволяет сократить длительность процесса обучения.</p>

<p>Инициализация весовых коэффициентов случайными значениями может привести к тому, что различные классы, 
которым соответствуют плотно распределенные входные образы, сольются или, наоборот, раздробятся на дополнительные 
подклассы в случае близких образов одного и того же класса. Для избежания такой ситуации используется метод 
выпуклой комбинации[3]. Суть его сводится к тому, что входные нормализованные образы подвергаются 
преобразованию:</p>

<p><IMG SRC="..\img\image53.gif" WIDTH=240 HEIGHT=55>, &#9;(6)</p>

<p>где x<SUB>i</SUB> – i-ая компонента входного образа, n – общее число его компонент, 
<FONT FACE="Symbol">&#97;</font> (t) – коэффициент, изменяющийся в процессе обучения от нуля до единицы, в результате 
чего вначале на входы сети подаются практически одинаковые образы, а с течением времени они все больше сходятся к 
исходным. Весовые коэффициенты устанавливаются на шаге инициализации равными величине</p>

<p><IMG SRC="..\img\image54.gif" WIDTH=78 HEIGHT=55>, &#9;(7)</p>

<p>где n – размерность вектора весов для нейронов инициализируемого слоя.</p>

<p>На основе рассмотренного выше метода строятся нейронные сети особого типа – так называемые 
самоорганизующиеся структуры – self-organizing feature maps (этот устоявшийся перевод с английского, на мой взгляд, не 
очень удачен, так как, речь идет не об изменении структуры сети, а только о подстройке синапсов). Для них после выбора 
из слоя n нейрона j с минимальным расстоянием D<SUB>j</SUB> (4) обучается по формуле (3) не только этот нейрон, но и 
его соседи, расположенные в окрестности R. Величина R на первых итерациях очень большая, так что обучаются все 
нейроны, но с течением времени она уменьшается до нуля. Таким образом, чем ближе конец обучения, тем точнее 
определяется группа нейронов, отвечающих каждому классу образов.</p>

</body>
</html>
